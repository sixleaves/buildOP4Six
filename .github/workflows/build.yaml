name: BuildImmortalWRT
on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  CONFIG_FILE: .config
  DIY_SH: diy-part2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      contents: write

    steps:
      - name: 1.下载config配置
        uses: actions/checkout@master

      - name: 2.安装依赖
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install ack neofetch antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: 3.克隆源代码
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH immortalwrt-mt798x
          ln -sf /workdir/immortalwrt-mt798x $GITHUB_WORKSPACE/immortalwrt-mt798x
          cd immortalwrt-mt798x
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 4.加载配置文件
        run: |
          [ -e $CONFIG_FILE ] && cp -f $CONFIG_FILE $GITHUB_WORKSPACE/immortalwrt-mt798x/

      - name: 5.修改Lan IP
        run: |
          cd immortalwrt-mt798x
          sed -i 's/192.168.1.1/192.168.23.1/g' package/base-files/files/bin/config_generate

      - name: 6.下载依赖包
        run: |
          cd immortalwrt-mt798x
          make defconfig
          cp -f .config complie_config
          make download -j8 V=s
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 7.备份config
        uses: actions/upload-artifact@master
        with:
          name: complie_config
          path: ${{ github.workspace }}/immortalwrt-mt798x/complie_config

      - name: 8.开始编译
        run: |
          cd immortalwrt-mt798x
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "::set-output name=status::success"
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: 9.生成SHA256校验和
        run: |
          cd immortalwrt-mt798x/bin/targets/*/*
          sha256sum *.bin > sha256sums.txt
          cat sha256sums.txt

      - name: 10.上传bin目录
        uses: actions/upload-artifact@master
        with:
          name: AX6000_RedMi
          path: immortalwrt-mt798x/bin

      - name: 11.发布固件
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ env.DEVICE_NAME }}--${{ env.FILE_DATE }}"
          artifacts: "immortalwrt-mt798x/bin/targets/*/*/*"
          body: |
            # 未测试×
            IP: 192.168.31.1 | Password: none
